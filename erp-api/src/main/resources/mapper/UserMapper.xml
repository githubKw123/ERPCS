<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.kingborn.erp.uc.dao.UserDao">

    <resultMap id="baseResultMap" type="net.kingborn.erp.uc.model.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <id column="username" property="username" jdbcType="VARCHAR"/>
        <id column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <id column="salt" property="salt" jdbcType="VARCHAR"/>
        <id column="password" property="password" jdbcType="VARCHAR"/>
        <id column="createdTime" property="createdTime" jdbcType="TIMESTAMP"/>
        <id column="updatedTime" property="updatedTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="pagination">

    </sql>

    <select id="findById" parameterType="Long" resultMap="baseResultMap">
        SELECT id, username, mobile, salt, password, createdTime, updatedTime
        FROM uc_user
        WHERE id = #{id}
    </select>

    <insert id="add" parameterType="net.kingborn.erp.uc.model.User">
        INSERT INTO uc_user(id, username, mobile, salt, password)
        VALUES (#{id}, #{username}, #{mobile}, #{salt}, #{password})
    </insert>

    <!--
    <update id="update" parameterType="net.kingborn.erp.uc.model.User">
        UPDATE
            uc_user
        SET
            username = #{username},
            mobile   = #{mobile},
            salt     = #{salt},
            password = #{password}
        WHERE id = #{id}
    </update> -->

    <!--
    <delete id="deleteById">
        DELETE
        FROM uc_user
        WHERE id = #{id}
    </delete> -->

    <select id="findAll" resultMap="baseResultMap">
        SELECT username, mobile, salt, password, createdTime, updatedTime
        FROM uc_user
    </select>

    <select id="findList" resultMap="baseResultMap">
        SELECT id, username, mobile, salt, password, createdTime, updatedTime FROM uc_user WHERE 1 = 1
        <if test="username != null">
            AND username LIKE concat('%', #{username}, '%')
        </if>
        <if test="mobile != null">
            AND mobile LIKE concat(#{mobile}, '%')
        </if>
        ORDER BY createdTime DESC
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>

    </select>

    <select id="queryCount" resultType="int">
        SELECT COUNT(1) FROM uc_user
        <where>
            1 = 1
            <if test="username != null">
                AND username LIKE concat('%', #{username}, '%')
            </if>
            <if test="mobile != null">
                AND mobile LIKE concat(#{mobile}, '%')
            </if>
        </where>
    </select>

</mapper>